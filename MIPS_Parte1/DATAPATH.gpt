cc  -o DATAPATH DATAPATH.c -I/usr/lib64/alliance/include  -L/usr/lib64/alliance/lib -lPgn -lPpt -lPhl -lPat -lMut -lRcn
In file included from DATAPATH.c:5:0:
FSM.h:6:89: warning: useless storage class specifier in empty declaration
 typedef enum{ S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S6_0, S6_1, S6_2, S6_3, S6_4};
                                                                                         ^
FSM.h: In function ‘MaquinaDeEstados’:
FSM.h:49:4: warning: implicit declaration of function ‘datapatch’ [-Wimplicit-function-declaration]
    datapatch(clk,clka,FSMIorD,FSMIRWrite,FSMPCSrc,AluControl,FSMAluSrcA,FSMAluSrcB,PCEn,rst,codigo );
    ^
FSM.h:50:4: warning: implicit declaration of function ‘AfctFSM’ [-Wimplicit-function-declaration]
    AfctFSM(rst, opcode, funct);
    ^
FSM.h:67:6: warning: implicit declaration of function ‘datapatchFetch’ [-Wimplicit-function-declaration]
      datapatchFetch(clk,clka,FSMIorD,FSMIRWrite,FSMPCSrc,AluControl,FSMAluSrcA,FSMAluSrcB,PCEn,rst,codigo);
      ^
FSM.h:69:6: warning: implicit declaration of function ‘strcpy’ [-Wimplicit-function-declaration]
      strcpy(label, "Fetch");
      ^
FSM.h:69:6: warning: incompatible implicit declaration of built-in function ‘strcpy’
FSM.h:69:6: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
FSM.h:168:17: warning: implicit declaration of function ‘AluOp’ [-Wimplicit-function-declaration]
      FSMAluOp = AluOp(opcode);
                 ^
FSM.h:169:19: warning: implicit declaration of function ‘setAluControl’ [-Wimplicit-function-declaration]
      AluControl = setAluControl(AluOp(opcode), funct);
                   ^
FSM.h: At top level:
FSM.h:236:6: warning: conflicting types for ‘AfctFSM’
 void AfctFSM(int reset, int opcode, int Funct){
      ^
FSM.h:50:4: note: previous implicit declaration of ‘AfctFSM’ was here
    AfctFSM(rst, opcode, funct);
    ^
In file included from DATAPATH.c:7:0:
inst_data_mem.h: In function ‘inttostr’:
inst_data_mem.h:4:16: warning: implicit declaration of function ‘mbkalloc’ [-Wimplicit-function-declaration]
  str = (char*) mbkalloc(32 * sizeof(char));
                ^
inst_data_mem.h:4:8: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  str = (char*) mbkalloc(32 * sizeof(char));
        ^
DATAPATH.c: At top level:
DATAPATH.c:13:7: error: redefinition of ‘inttostr’
 char *inttostr(entier) 
       ^
In file included from DATAPATH.c:7:0:
inst_data_mem.h:1:7: note: previous definition of ‘inttostr’ was here
 char* inttostr(int entier) 
       ^
DATAPATH.c: In function ‘inttostr’:
DATAPATH.c:17:8: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  str = (char*)mbkalloc(32*sizeof(char));
        ^
DATAPATH.c: In function ‘inttoHstr’:
DATAPATH.c:26:8: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  str = (char *) mbkalloc (32 * sizeof (char));
        ^
DATAPATH.c: At top level:
DATAPATH.c:126:8: warning: conflicting types for ‘datapatchFetch’
   void datapatchFetch(int clock, int clockA, int IorD, int IRWrite, int PCSrc, int ALUControl, int AluSrcA, int AluSrcB, int PCen, int Reset, int CODIGO)
        ^
In file included from DATAPATH.c:5:0:
FSM.h:67:6: note: previous implicit declaration of ‘datapatchFetch’ was here
      datapatchFetch(clk,clka,FSMIorD,FSMIRWrite,FSMPCSrc,AluControl,FSMAluSrcA,FSMAluSrcB,PCEn,rst,codigo);
      ^
DATAPATH.c:164:8: warning: conflicting types for ‘datapatch’
   void datapatch(int clock, int clockA, int IorD, int IRWrite, int PCSrc, int ALUControl, int AluSrcA, int AluSrcB, int PCen, int Reset, int CODIGO)
        ^
In file included from DATAPATH.c:5:0:
FSM.h:49:4: note: previous implicit declaration of ‘datapatch’ was here
    datapatch(clk,clka,FSMIorD,FSMIRWrite,FSMPCSrc,AluControl,FSMAluSrcA,FSMAluSrcB,PCEn,rst,codigo );
    ^
Makefile.8931:14: recipe for target 'DATAPATH' failed
make: *** [DATAPATH] Error 1
